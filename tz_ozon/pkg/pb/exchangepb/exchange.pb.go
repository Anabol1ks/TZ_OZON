// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: exchange.proto

package exchangepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExchangeRateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DateReq       string                 `protobuf:"bytes,1,opt,name=date_req,json=dateReq,proto3" json:"date_req,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRateRequest) Reset() {
	*x = ExchangeRateRequest{}
	mi := &file_exchange_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateRequest) ProtoMessage() {}

func (x *ExchangeRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRateRequest) Descriptor() ([]byte, []int) {
	return file_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *ExchangeRateRequest) GetDateReq() string {
	if x != nil {
		return x.DateReq
	}
	return ""
}

type ExchangeRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Xml           string                 `protobuf:"bytes,1,opt,name=xml,proto3" json:"xml,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRateResponse) Reset() {
	*x = ExchangeRateResponse{}
	mi := &file_exchange_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateResponse) ProtoMessage() {}

func (x *ExchangeRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateResponse.ProtoReflect.Descriptor instead.
func (*ExchangeRateResponse) Descriptor() ([]byte, []int) {
	return file_exchange_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeRateResponse) GetXml() string {
	if x != nil {
		return x.Xml
	}
	return ""
}

func (x *ExchangeRateResponse) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

var File_exchange_proto protoreflect.FileDescriptor

const file_exchange_proto_rawDesc = "" +
	"\n" +
	"\x0eexchange.proto\x12\bexchange\x1a\x1fgoogle/protobuf/timestamp.proto\"0\n" +
	"\x13ExchangeRateRequest\x12\x19\n" +
	"\bdate_req\x18\x01 \x01(\tR\adateReq\"X\n" +
	"\x14ExchangeRateResponse\x12\x10\n" +
	"\x03xml\x18\x01 \x01(\tR\x03xml\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date2c\n" +
	"\x0fExchangeService\x12P\n" +
	"\x0fGetExchangeRate\x12\x1d.exchange.ExchangeRateRequest\x1a\x1e.exchange.ExchangeRateResponseB\x1bZ\x19tz_ozon/pkg/pb/exchangepbb\x06proto3"

var (
	file_exchange_proto_rawDescOnce sync.Once
	file_exchange_proto_rawDescData []byte
)

func file_exchange_proto_rawDescGZIP() []byte {
	file_exchange_proto_rawDescOnce.Do(func() {
		file_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_exchange_proto_rawDesc), len(file_exchange_proto_rawDesc)))
	})
	return file_exchange_proto_rawDescData
}

var file_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_exchange_proto_goTypes = []any{
	(*ExchangeRateRequest)(nil),   // 0: exchange.ExchangeRateRequest
	(*ExchangeRateResponse)(nil),  // 1: exchange.ExchangeRateResponse
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_exchange_proto_depIdxs = []int32{
	2, // 0: exchange.ExchangeRateResponse.date:type_name -> google.protobuf.Timestamp
	0, // 1: exchange.ExchangeService.GetExchangeRate:input_type -> exchange.ExchangeRateRequest
	1, // 2: exchange.ExchangeService.GetExchangeRate:output_type -> exchange.ExchangeRateResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_exchange_proto_init() }
func file_exchange_proto_init() {
	if File_exchange_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_exchange_proto_rawDesc), len(file_exchange_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exchange_proto_goTypes,
		DependencyIndexes: file_exchange_proto_depIdxs,
		MessageInfos:      file_exchange_proto_msgTypes,
	}.Build()
	File_exchange_proto = out.File
	file_exchange_proto_goTypes = nil
	file_exchange_proto_depIdxs = nil
}
